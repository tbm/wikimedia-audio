#!/usr/bin/env python3

"""
Upload audio files to Wikimedia Commons
"""

import json
import pathlib
import random
import string
import time

import mutagen
import pywikibot
from pywikibot.specialbots import UploadRobot


def get_metadata(filename):
    """
    Obtain metadata from a FLAC audio file
    """

    meta = mutagen.File(filename)
    data = {}
    data["author"] = meta["artist"][0]
    data["recording_date"] = meta["date"][0]
    data["phrase"] = meta["title"][0].split('"')[1]
    return data


def page_name(filename):
    """
    Return page name for filename
    """

    return f"File:{filename}"


def upload(site, filename):
    """
    Upload file to site using UploadRobot
    """

    template = """=={{int:filedesc}}==
{{Information
|description=
  {{en|Pronunciation of Swahili "$phrase", spoken by a woman from Kenya.}}
  {{de|Aussprache von Swahili "$phrase", gesprochen von einer Frau aus Kenia.}}
  {{sw|Matamshi ya "$phrase", iliotamkwa na mwanamke Mkenya.}}
|date=$recording_date
|source={{Private correspondence}}
|author=$author
}}

{{subst:OP}}

=={{int:license-header}}==
{{cc-by-sa-4.0}}

[[Category:Swahili pronunciation]]
[[Category:Audio recordings by $author]]
{{Supported by Wikimedia UK}}
"""
    description = string.Template(template).substitute(get_metadata(filename))
    summary = "Add Swahili pronunciation"
    bot = UploadRobot(
        filename,
        description=description,
        summary=summary,
        keep_filename=True,
        target_site=site,
    )
    bot.run()


def add_structured_data(site, filename):
    """
    Add structured data to Wikimedia page
    """

    page = pywikibot.Page(site, title=page_name(filename), ns=6)
    media_identifier = "M{}".format(page.pageid)

    meta = get_metadata(filename)
    author = meta["author"]
    phrase = meta["phrase"]
    recording_date = meta["recording_date"]

    data = {
        "claims": [
            # instance of (P31)
            {
                "mainsnak": {
                    "datavalue": {
                        "type": "wikibase-entityid",
                        "value": {
                            "entity-type": "item",
                            "id": "Q108167708",
                            "numeric-id": 108167708,
                        },
                    },
                    "property": "P31",
                    "snaktype": "value",
                },
                "rank": "normal",
                "type": "statement",
            },
            # language of work (P407)
            # Q7838 = Swahili
            {
                "mainsnak": {
                    "datavalue": {
                        "type": "wikibase-entityid",
                        "value": {
                            "entity-type": "item",
                            "id": "Q7838",
                            "numeric-id": 7838,
                        },
                    },
                    "property": "P407",
                    "snaktype": "value",
                },
                "rank": "normal",
                "type": "statement",
            },
            # audio transcription (P9533)
            {
                "mainsnak": {
                    "datavalue": {
                        "type": "monolingualtext",
                        "value": {
                            "language": "sw",
                            "text": phrase,
                        },
                    },
                    "property": "P9533",
                    "snaktype": "value",
                },
                "rank": "normal",
                "type": "statement",
            },
            # Creator
            {
                "mainsnak": {"property": "P170", "snaktype": "somevalue"},
                "qualifiers": {
                    "P2093": [
                        {
                            "datavalue": {"type": "string", "value": f"{author}"},
                            "property": "P2093",
                            "snaktype": "value",
                        }
                    ],
                },
                "rank": "normal",
                "type": "statement",
            },
            # Copyright license
            # Q18199165 = CC-BY-SA-4.0
            {
                "mainsnak": {
                    "datavalue": {
                        "type": "wikibase-entityid",
                        "value": {
                            "entity-type": "item",
                            "id": "Q18199165",
                            "numeric-id": 18199165,
                        },
                    },
                    "property": "P275",
                    "snaktype": "value",
                },
                "rank": "normal",
                "type": "statement",
            },
            # Copyright status
            # Q50423863 = copyrighted
            {
                "mainsnak": {
                    "datavalue": {
                        "type": "wikibase-entityid",
                        "value": {
                            "entity-type": "item",
                            "id": "Q50423863",
                            "numeric-id": 50423863,
                        },
                    },
                    "property": "P6216",
                    "snaktype": "value",
                },
                "rank": "normal",
                "type": "statement",
            },
            # Inception
            {
                "mainsnak": {
                    "datavalue": {
                        "type": "time",
                        "value": {
                            "after": 0,
                            "before": 0,
                            "calendarmodel": "http://www.wikidata.org/entity/Q1985727",
                            "precision": 11,
                            "time": f"+{recording_date}T00:00:00Z",
                            "timezone": 0,
                        },
                    },
                    "property": "P571",
                    "snaktype": "value",
                },
                "rank": "normal",
                "type": "statement",
            },
            # media type (P1163)
            {
                "mainsnak": {
                    "datavalue": {
                        "type": "string",
                        "value": "audio/flac",
                    },
                    "property": "P1163",
                    "snaktype": "value",
                },
                "rank": "normal",
                "type": "statement",
            },
            # captured with (P4082)
            # Q111799208 = RÃ¸de NT-USB Mini
            {
                "mainsnak": {
                    "datavalue": {
                        "type": "wikibase-entityid",
                        "value": {
                            "entity-type": "item",
                            "id": "Q111799208",
                            "numeric-id": 111799208,
                        },
                    },
                    "property": "P4082",
                    "snaktype": "value",
                },
                "rank": "normal",
                "type": "statement",
            },
        ],
        "labels": {
            "de": {
                "language": "de",
                "value": f'Aussprache von Swahili "{phrase}", gesprochen von einer Frau aus Kenia',
            },
            "en": {
                "language": "en",
                "value": f'Pronunciation of Swahili "{phrase}", spoken by a woman from Kenya',
            },
            "sw": {
                "language": "sw",
                "value": f'Matamshi ya "{phrase}", iliotamkwa na mwanamke Mkenya',
            },
        },
    }

    csrf_token = site.tokens["csrf"]
    payload = {
        "action": "wbeditentity",
        "format": "json",
        "id": media_identifier,
        "data": json.dumps(data, separators=(",", ":")),
        "token": csrf_token,
        "summary": "Add structured data",
        "bot": False,
    }

    request = site.simple_request(**payload)
    try:
        request.submit()
    except pywikibot.data.api.APIError as error:
        print("Got an error from the API, the following request were made:")
        print(request)
        print("Error: {}".format(error))


def main():
    """
    Get files, upload them and add structured data
    """

    site = pywikibot.Site("commons", "commons")
    site.login()
    site.get_tokens("csrf")  # preload csrf token
    upload_dir = pathlib.Path("uploaded")
    for flac in pathlib.Path().glob("*.flac"):
        filename = flac.name
        page = pywikibot.Page(site, title=page_name(filename))
        if page.exists():
            print(f"Page {page_name(filename)} exists already")
            continue
        upload(site, filename)
        add_structured_data(site, filename)
        upload_dir.mkdir(exist_ok=True)
        flac.replace(upload_dir / flac)
        delay = random.randint(60, 3 * 60)
        print(f"Sleeping for {delay} seconds")
        time.sleep(delay)


if __name__ == "__main__":
    main()
